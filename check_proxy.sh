#!/bin/sh
# Скрипт проверки на работоспособность прокси Socks 5
# Входящий файл для парсинга прокси - proxy.list, исходящий файл со списком работающих прокси 
# - work_proxy.list. Входящий файл должен быть не пустым. Входящий файл должен находиться в текущем 
# каталоге скрипта, тут же создаётся и исходящий файл. 
# Время ожидания соединения с прокси равно 1-ой секунде, в противном случае он помечается как 
# неработающий. Время проверки программой curl равно 2-м секундам, после чего происходит переход к 
# следующему по списку хосту. Последнее сделано для того, тчобы избежать нештатных ситуаций
# "подвисания" программы.
# Исключаемые порты из проверки: 45554, 1080, 10200, 9999, 8081, 9000
#------------------------------------------------------------------------------------------

E_BAD_DBFILE=71 #Код принудительного завершения работы скрипта
#==================================================================================
# Проверка на наличия файла со списком прокси, если его нет, то скрипт завершается
#==================================================================================
plf=proxy.list
wplf=work_proxy.list
if [ ! -r "$plf" ]
  then
    echo "Не могу прочитать файл со списком прокси. Скачиваем свежий список прокси."
    curl --speed-time 10 http://www.live-socks.net/feeds/posts/default | grep -E -o '([0-9]{1,3}[\.]){3}[0-9]{1,3}([\:][0-9]{1,5})' | uniq > $plf
  else
  n_plf=`cat $plf | wc -l`
  if [ "$n_plf" = "0" ]
     then
        echo "Входящий файл пустой."
        echo -n "Скачать новый список прокси? (y/n) "
        read answer
        case "$answer" in
           y|Y) echo "Скачиваем свежий список прокси..."
           curl --speed-time 10 http://www.live-socks.net/feeds/posts/default | grep -E -o '([0-9]{1,3}[\.]){3}[0-9]{1,3}([\:][0-9]{1,5})' > $plf
           ;;
           n|N) echo "Ничего не скачиваем..."
           ;;
           *) echo "Ничего не скачиваем..."
           ;;
        esac
     if [ ! -r "$wplf" ]
        then
           echo "Отсутствует файл рабочих прокси. Программа завершается"
           exit $E_BAD_DBFILE
        else
        n_wplf=`cat $wplf | wc -l` 
        if [ "$n_wplf" = "0" ]
           then
              echo "Файл рабочих прокси пустой. Программа завершается."
              exit $E_BAD_DBFILE
           else
              echo "Копируем рабочие прокси во входящий файл."
              cp $wplf $plf
        fi
     fi
     else
        echo "Обнаружен заполненный входящий файл. Продолжаем работу программы."
  fi
fi
#=====================================================================================================
# Проверка прокси на доступность. Из исходного файла исключаются прокси с портами 45554, 1080, 10200, 9999, 8081 , 9000
#=====================================================================================================
pl=`cat $plf | grep -v 45554 | grep -v 1080 | grep -v 10200 | grep -v 9999 | grep -v 8081 | grep -v 9000`
# Создание/очистка пустого выходного файла для списка работающих прокси
cp /dev/null work_proxy.list
for i in $pl;
do
  echo "Проверка для: " $i
  answer=`curl -sSfI --speed-time 1 --connect-timeout 1 --socks5-hostname $i www.google.com | grep -B 0 HTTP/1.1 | sed 's/^[ \t]*//;s/[ \t]*$//' | sed 's/\//*****/g'`
  len=${#answer}
  if [ "$len" = "0" ]
    then
      echo "Не работающий прокси 5 сокс для: " $i $answer
    else
      echo "Работающий прокси 5 сокс для: " $i $answer
      echo $i >> $wplf
  fi
done
# Очистка входного файла с первоначальным списком прокси
cp /dev/null $plf